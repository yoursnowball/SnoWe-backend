name: deploy
on:
  pull_request:
    types: [closed]
    branches: [ master ]
jobs:
  build:
    runs-on: ubuntu-18.04
    env:
      APP_JWT_SECRET: ${{ secrets.APP_JWT_SECRET }}
      APP_URL: ${{ secrets.APP_URL }}
    steps:
      - name: CheckOut Repository
        uses: actions/checkout@v2
      - name: Checkout submodules using a PAT
        run: |
          git config --file .gitmodules --get-regexp url | while read url; do
            git config --file=.gitmodules $(echo "$url" | sed -E "s/git@github.com:|https:\/\/github.com\//https:\/\/${{ secrets.CI_PAT }}:${{ secrets.CI_PAT }}@github.com\//")
          done
          git submodule sync
          git submodule update --init --recursive
      - name: SetUp JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache Gradle
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Test
        run: ./gradlew -x test
      - name: Build
        run: ./gradlew build
      - name: make Zip file
        run: zip -r snowe.zip .
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./snowe.zip s3://snowe/snowe.zip
      - name: Code Deploy
        run: aws deploy create-deployment --application-name snowe --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name develop --s3-location bucket=snowe,bundleType=zip,key=snowe.zip
